{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/src/components/PrivacyConsent.js"],"sourcesContent":["\"use client\";\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\n\r\nexport default function PrivacyConsent({ onChange, checked = false }) {\r\n  const [isChecked, setIsChecked] = useState(checked);\r\n  \r\n  const handleChange = (e) => {\r\n    setIsChecked(e.target.checked);\r\n    if (onChange) {\r\n      onChange(e);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"mb-3 form-check\">\r\n      <input\r\n        type=\"checkbox\"\r\n        className=\"form-check-input\"\r\n        id=\"privacy\"\r\n        name=\"privacy\"\r\n        checked={isChecked}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <label className=\"form-check-label text-white\" htmlFor=\"privacy\">\r\n        Ich habe die <Link href=\"/datenschutz\" className=\"text-gold\" target=\"_blank\">Datenschutzerklärung</Link> gelesen und stimme zu, dass meine angegebenen Daten zwecks Kontaktaufnahme gespeichert und verarbeitet werden.\r\n      </label>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS,eAAe,EAAE,QAAQ,EAAE,UAAU,KAAK,EAAE;IAClE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,eAAe,CAAC;QACpB,aAAa,EAAE,MAAM,CAAC,OAAO;QAC7B,IAAI,UAAU;YACZ,SAAS;QACX;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,MAAK;gBACL,WAAU;gBACV,IAAG;gBACH,MAAK;gBACL,SAAS;gBACT,UAAU;gBACV,QAAQ;;;;;;0BAEV,8OAAC;gBAAM,WAAU;gBAA8B,SAAQ;;oBAAU;kCAClD,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAe,WAAU;wBAAY,QAAO;kCAAS;;;;;;oBAA2B;;;;;;;;;;;;;AAIhH","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/src/components/ContactFormClient.js"],"sourcesContent":["\"use client\";\r\nimport { useState } from 'react';\r\nimport PrivacyConsent from './PrivacyConsent';\r\nimport emailjs from '@emailjs/browser';\r\n\r\nexport default function ContactFormClient() {\r\n    const [formData, setFormData] = useState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      inquiryType: '',\r\n      message: '',\r\n      privacy: false\r\n    });\r\n    \r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [submitStatus, setSubmitStatus] = useState({\r\n      success: false,\r\n      error: null\r\n    });\r\n\r\n  // Kürzere Vorlagen für verschiedene Anfragetypen\r\n  const messageTemplates = {\r\n    personalvermittlung: \r\n      'Ich interessiere mich für Ihre Personalvermittlungsdienstleistungen und bitte um Kontaktaufnahme zur Besprechung der Möglichkeiten.',\r\n    \r\n    unternehmensberatung:\r\n      'Ich möchte Ihre Unternehmensberatungsleistungen in Anspruch nehmen und bitte um ein Beratungsgespräch.',\r\n    \r\n    munda:\r\n      'Ich interessiere mich für Ihre M&A-Dienstleistungen und bitte um weitere Informationen zur Begleitung bei Unternehmenskäufen/-verkäufen.',\r\n    \r\n    andere:\r\n      'Ich habe eine Anfrage und bitte um Kontaktaufnahme.'\r\n  };\r\n\r\n  // Anfragetyp in lesbaren Text umwandeln\r\n  const getInquiryTypeText = (type) => {\r\n    switch(type) {\r\n      case 'personalvermittlung': return 'Personalvermittlung';\r\n      case 'unternehmensberatung': return 'Unternehmensberatung';\r\n      case 'munda': return 'M&A';\r\n      case 'andere': return 'Andere Anfrage';\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n // Änderung im Formular behandeln\r\n const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    \r\n    // Wenn Checkbox, dann den \"checked\"-Wert verwenden, ansonsten den \"value\"-Wert\r\n    const newValue = type === 'checkbox' ? checked : value;\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: newValue\r\n    }));\r\n    \r\n    // Wenn der Anfragetyp geändert wird, aktualisiere die Nachrichtenvorlage\r\n    if (name === 'inquiryType' && value !== '') {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        message: messageTemplates[value] || ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Formular absenden\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Prüfe, ob die Datenschutzerklärung akzeptiert wurde\r\n    if (!formData.privacy) {\r\n      alert('Bitte akzeptieren Sie die Datenschutzerklärung, um fortzufahren.');\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    setSubmitStatus({ success: false, error: null });\r\n    \r\n    // Bereite Daten für EmailJS vor\r\n    const inquiryTypeText = getInquiryTypeText(formData.inquiryType);\r\n    const currentDate = new Date().toLocaleDateString('de-DE');\r\n    \r\n    // EmailJS Template Parameter\r\n    const emailParams = {\r\n      // Empfänger\r\n      to_email: 'info@blackforge-consulting.de',\r\n      \r\n      // Absender-Informationen\r\n      from_name: formData.name,\r\n      from_email: formData.email,\r\n      reply_to: formData.email,\r\n      \r\n      // Betreff\r\n      subject: `Neue Anfrage über Website: ${inquiryTypeText}`,\r\n      \r\n      // Template Variablen für EmailJS\r\n      inquiry_type: inquiryTypeText,\r\n      phone: formData.phone || 'Nicht angegeben',\r\n      date: currentDate,\r\n      message: formData.message.replace(/\\n/g, '<br>'),\r\n      \r\n      // Fallback Text-Version für E-Mail-Clients ohne HTML-Unterstützung\r\n      text_message: `\r\nNeue Kontaktanfrage über die Website\r\n\r\nDatum: ${currentDate}\r\nName: ${formData.name}\r\nE-Mail: ${formData.email}\r\nTelefon: ${formData.phone || 'Nicht angegeben'}\r\nAnfragetyp: ${inquiryTypeText}\r\n\r\nNachricht:\r\n${formData.message}\r\n      `\r\n    };\r\n    \r\n    // EmailJS Service und Public Key\r\n    const serviceId = \"blackforge\"; // Deine Service-ID\r\n    const publicKey = \"TXO7tV_mlkGfsf_td\"; // Dein öffentlicher Schlüssel\r\n    const templateId = \"template_tnleshf\"; // Deine Template-ID\r\n    \r\n    // E-Mail mit EmailJS Template senden\r\n    emailjs.send(serviceId, templateId, emailParams, publicKey)\r\n      .then((response) => {\r\n        console.log('Email erfolgreich gesendet!', response);\r\n        setSubmitStatus({ success: true, error: null });\r\n        \r\n        // Formular zurücksetzen\r\n        setFormData({\r\n          name: '',\r\n          email: '',\r\n          phone: '',\r\n          inquiryType: '',\r\n          message: '',\r\n          privacy: false\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Fehler beim Senden:', error);\r\n        setSubmitStatus({ \r\n          success: false, \r\n          error: 'Beim Senden Ihrer Nachricht ist ein Fehler aufgetreten. Bitte versuchen Sie es später noch einmal oder kontaktieren Sie uns direkt per E-Mail.' \r\n        });\r\n      })\r\n      .finally(() => {\r\n        setIsSubmitting(false);\r\n      });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setSubmitStatus({ success: false, error: null });\r\n  };\r\n\r\n  return (\r\n    <div className=\"card bg-black-custom p-4 mb-4\">\r\n      <div className=\"card-body\">\r\n        {submitStatus.success ? (\r\n          <div className=\"text-center py-4\">\r\n            <div className=\"mb-3\">\r\n              <i className=\"bi bi-check-circle text-success\" style={{ fontSize: \"3rem\" }}></i>\r\n            </div>\r\n            <h4 className=\"mb-3 text-white\">Vielen Dank für Ihre Nachricht!</h4>\r\n            <p className=\"text-white mb-4\">Wir werden uns umgehend bei Ihnen melden.</p>\r\n            <button \r\n              className=\"btn btn-outline-gold\" \r\n              onClick={resetForm}\r\n            >\r\n              Neues Formular\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={handleSubmit}>\r\n            {submitStatus.error && (\r\n              <div className=\"alert alert-danger mb-4\" role=\"alert\">\r\n                {submitStatus.error}\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"name\" className=\"form-label text-white\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control bg-dark text-white border-secondary\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                placeholder=\"Ihr Name\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"email\" className=\"form-label text-white\">E-Mail</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control bg-dark text-white border-secondary\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                placeholder=\"Ihre E-Mail-Adresse\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"phone\" className=\"form-label text-white\">Telefon</label>\r\n              <input\r\n                type=\"tel\"\r\n                className=\"form-control bg-dark text-white border-secondary\"\r\n                id=\"phone\"\r\n                name=\"phone\"\r\n                value={formData.phone}\r\n                onChange={handleChange}\r\n                placeholder=\"Ihre Telefonnummer\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"inquiryType\" className=\"form-label text-white\">Anfragetyp</label>\r\n              <select\r\n                className=\"form-select bg-dark text-white border-secondary\"\r\n                id=\"inquiryType\"\r\n                name=\"inquiryType\"\r\n                value={formData.inquiryType}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"\">Bitte wählen...</option>\r\n                <option value=\"personalvermittlung\">Personalvermittlung</option>\r\n                <option value=\"unternehmensberatung\">Unternehmensberatung</option>\r\n                <option value=\"munda\">M&A</option>\r\n                <option value=\"andere\">Andere Anfrage</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"message\" className=\"form-label text-white\">Nachricht</label>\r\n              <textarea \r\n                className=\"form-control bg-dark text-white border-secondary\" \r\n                id=\"message\"\r\n                name=\"message\"\r\n                value={formData.message}\r\n                onChange={handleChange}\r\n                rows=\"6\"\r\n                placeholder=\"Ihre Nachricht an uns\"\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            \r\n            <PrivacyConsent \r\n              onChange={handleChange} \r\n              checked={formData.privacy}\r\n            />\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              className=\"btn btn-gold\" \r\n              disabled={isSubmitting}\r\n            >\r\n              {isSubmitting ? (\r\n                <>\r\n                  <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                  Wird gesendet...\r\n                </>\r\n              ) : 'Nachricht senden'}\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/models/EmailJSResponseStatus.js"],"sourcesContent":["export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n"],"names":[],"mappings":";;;AAAO,MAAM;IACT,YAAY,UAAU,CAAC,EAAE,QAAQ,eAAe,CAAE;QAC9C,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,IAAI,GAAG;IAChB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/utils/createWebStorage/createWebStorage.js"],"sourcesContent":["export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,mBAAmB;IAC5B,IAAI,OAAO,iBAAiB,aACxB;IACJ,OAAO;QACH,KAAK,CAAC,MAAQ,QAAQ,OAAO,CAAC,aAAa,OAAO,CAAC;QACnD,KAAK,CAAC,KAAK,QAAU,QAAQ,OAAO,CAAC,aAAa,OAAO,CAAC,KAAK;QAC/D,QAAQ,CAAC,MAAQ,QAAQ,OAAO,CAAC,aAAa,UAAU,CAAC;IAC7D;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/store/store.js"],"sourcesContent":["import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ;IACjB,QAAQ;IACR,eAAe;IACf,iBAAiB,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 590, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/utils/buildOptions/buildOptions.js"],"sourcesContent":["export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,eAAe,CAAC;IACzB,IAAI,CAAC,SACD,OAAO,CAAC;IACZ,oCAAoC;IACpC,IAAI,OAAO,YAAY,UAAU;QAC7B,OAAO;YACH,WAAW;QACf;IACJ;IACA,gEAAgE;IAChE,IAAI,QAAQ,QAAQ,OAAO,mBAAmB;QAC1C,OAAO;IACX;IACA,OAAO,CAAC;AACZ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/methods/init/init.js"],"sourcesContent":["import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAMO,MAAM,OAAO,CAAC,SAAS,SAAS,yBAAyB;IAC5D,IAAI,CAAC,SACD;IACJ,MAAM,OAAO,CAAA,GAAA,mLAAA,CAAA,eAAY,AAAD,EAAE;IAC1B,4JAAA,CAAA,QAAK,CAAC,SAAS,GAAG,KAAK,SAAS;IAChC,4JAAA,CAAA,QAAK,CAAC,aAAa,GAAG,KAAK,aAAa;IACxC,4JAAA,CAAA,QAAK,CAAC,eAAe,GAAG,KAAK,eAAe;IAC5C,4JAAA,CAAA,QAAK,CAAC,SAAS,GAAG,KAAK,SAAS;IAChC,4JAAA,CAAA,QAAK,CAAC,SAAS,GAAG,KAAK,SAAS;IAChC,4JAAA,CAAA,QAAK,CAAC,MAAM,GAAG,KAAK,MAAM,IAAI;AAClC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/api/sendPost.js"],"sourcesContent":["import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,MAAM,WAAW,OAAO,KAAK,MAAM,UAAU,CAAC,CAAC;IAClD,MAAM,WAAW,MAAM,MAAM,4JAAA,CAAA,QAAK,CAAC,MAAM,GAAG,KAAK;QAC7C,QAAQ;QACR;QACA,MAAM;IACV;IACA,MAAM,UAAU,MAAM,SAAS,IAAI;IACnC,MAAM,iBAAiB,IAAI,6KAAA,CAAA,wBAAqB,CAAC,SAAS,MAAM,EAAE;IAClE,IAAI,SAAS,EAAE,EAAE;QACb,OAAO;IACX;IACA,MAAM;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 662, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/utils/validateParams/validateParams.js"],"sourcesContent":["export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,iBAAiB,CAAC,WAAW,WAAW;IACjD,IAAI,CAAC,aAAa,OAAO,cAAc,UAAU;QAC7C,MAAM;IACV;IACA,IAAI,CAAC,aAAa,OAAO,cAAc,UAAU;QAC7C,MAAM;IACV;IACA,IAAI,CAAC,cAAc,OAAO,eAAe,UAAU;QAC/C,MAAM;IACV;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 682, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js"],"sourcesContent":["export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,yBAAyB,CAAC;IACnC,gEAAgE;IAChE,IAAI,kBAAkB,eAAe,QAAQ,OAAO,mBAAmB;QACnE,MAAM;IACV;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/utils/isHeadless/isHeadless.js"],"sourcesContent":["export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,aAAa,CAAC;IACvB,OAAO,UAAU,SAAS,IAAI,CAAC,UAAU,SAAS,IAAI,UAAU,SAAS,CAAC,MAAM,KAAK;AACzF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 709, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/errors/headlessError/headlessError.js"],"sourcesContent":["import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB;IACzB,OAAO,IAAI,6KAAA,CAAA,wBAAqB,CAAC,KAAK;AAC1C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 723, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js"],"sourcesContent":["export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,0BAA0B,CAAC,MAAM;IAC1C,IAAI,CAAC,MAAM,OAAO,CAAC,OAAO;QACtB,MAAM;IACV;IACA,IAAI,OAAO,kBAAkB,UAAU;QACnC,MAAM;IACV;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 740, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js"],"sourcesContent":["import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,sBAAsB,CAAC;IACzB,OAAO,CAAC,QAAQ,IAAI,EAAE,UAAU,CAAC,QAAQ,aAAa;AAC1D;AACA,MAAM,WAAW,CAAC,MAAM;IACpB,OAAO,gBAAgB,WAAW,KAAK,GAAG,CAAC,QAAQ,IAAI,CAAC,KAAK;AACjE;AACO,MAAM,yBAAyB,CAAC,SAAS;IAC5C,IAAI,oBAAoB,UACpB,OAAO;IACX,CAAA,GAAA,yMAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,IAAI,EAAE,QAAQ,aAAa;IAC3D,MAAM,QAAQ,SAAS,QAAQ,QAAQ,aAAa;IACpD,IAAI,OAAO,UAAU,UACjB,OAAO;IACX,OAAO,QAAQ,IAAI,CAAC,QAAQ,CAAC;AACjC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js"],"sourcesContent":["import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB;IAC7B,OAAO,IAAI,6KAAA,CAAA,wBAAqB,CAAC,KAAK;AAC1C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 778, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js"],"sourcesContent":["export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,0BAA0B,CAAC,UAAU;IAC9C,IAAI,OAAO,aAAa,YAAY,WAAW,GAAG;QAC9C,MAAM;IACV;IACA,IAAI,MAAM,OAAO,OAAO,UAAU;QAC9B,MAAM;IACV;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 795, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js"],"sourcesContent":["import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,cAAc,OAAO,IAAI,UAAU;IACrC,MAAM,WAAW,OAAO,AAAC,MAAM,QAAQ,GAAG,CAAC,OAAQ;IACnD,OAAO,WAAW,KAAK,GAAG,KAAK;AACnC;AACO,MAAM,iBAAiB,OAAO,WAAW,SAAS;IACrD,IAAI,CAAC,QAAQ,QAAQ,IAAI,CAAC,SAAS;QAC/B,OAAO;IACX;IACA,CAAA,GAAA,yMAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,QAAQ,EAAE,QAAQ,EAAE;IACpD,MAAM,KAAK,QAAQ,EAAE,IAAI;IACzB,MAAM,WAAW,MAAM,YAAY,IAAI,QAAQ,QAAQ,EAAE;IACzD,IAAI,WAAW,GAAG;QACd,OAAO;IACX;IACA,MAAM,QAAQ,GAAG,CAAC,IAAI,KAAK,GAAG,GAAG,QAAQ;IACzC,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 823, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/errors/limitRateError/limitRateError.js"],"sourcesContent":["import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB;IAC1B,OAAO,IAAI,6KAAA,CAAA,wBAAqB,CAAC,KAAK;AAC1C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 837, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/methods/send/send.js"],"sourcesContent":["import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AASO,MAAM,OAAO,OAAO,WAAW,YAAY,gBAAgB;IAC9D,MAAM,OAAO,CAAA,GAAA,mLAAA,CAAA,eAAY,AAAD,EAAE;IAC1B,MAAM,YAAY,KAAK,SAAS,IAAI,4JAAA,CAAA,QAAK,CAAC,SAAS;IACnD,MAAM,gBAAgB,KAAK,aAAa,IAAI,4JAAA,CAAA,QAAK,CAAC,aAAa;IAC/D,MAAM,kBAAkB,KAAK,eAAe,IAAI,4JAAA,CAAA,QAAK,CAAC,eAAe;IACrE,MAAM,YAAY;QAAE,GAAG,4JAAA,CAAA,QAAK,CAAC,SAAS;QAAE,GAAG,KAAK,SAAS;IAAC;IAC1D,MAAM,YAAY;QAAE,GAAG,4JAAA,CAAA,QAAK,CAAC,SAAS;QAAE,GAAG,KAAK,SAAS;IAAC;IAC1D,IAAI,iBAAiB,CAAA,GAAA,+KAAA,CAAA,aAAU,AAAD,EAAE,YAAY;QACxC,OAAO,QAAQ,MAAM,CAAC,CAAA,GAAA,sLAAA,CAAA,gBAAa,AAAD;IACtC;IACA,CAAA,GAAA,uLAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,WAAW;IACrC,CAAA,GAAA,uMAAA,CAAA,yBAAsB,AAAD,EAAE;IACvB,IAAI,kBAAkB,CAAA,GAAA,uMAAA,CAAA,yBAAsB,AAAD,EAAE,WAAW,iBAAiB;QACrE,OAAO,QAAQ,MAAM,CAAC,CAAA,GAAA,8LAAA,CAAA,oBAAiB,AAAD;IAC1C;IACA,IAAI,MAAM,CAAA,GAAA,uLAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,QAAQ,EAAE,WAAW,kBAAkB;QACrE,OAAO,QAAQ,MAAM,CAAC,CAAA,GAAA,wLAAA,CAAA,iBAAc,AAAD;IACvC;IACA,MAAM,SAAS;QACX,aAAa;QACb,SAAS;QACT,YAAY;QACZ,aAAa;QACb,iBAAiB;IACrB;IACA,OAAO,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,wBAAwB,KAAK,SAAS,CAAC,SAAS;QAC5D,gBAAgB;IACpB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 903, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/utils/validateForm/validateForm.js"],"sourcesContent":["export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,eAAe,CAAC;IACzB,IAAI,CAAC,QAAQ,KAAK,QAAQ,KAAK,QAAQ;QACnC,MAAM;IACV;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 917, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/methods/sendForm/sendForm.js"],"sourcesContent":["import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AACA,MAAM,eAAe,CAAC;IAClB,OAAO,OAAO,SAAS,WAAW,SAAS,aAAa,CAAC,QAAQ;AACrE;AASO,MAAM,WAAW,OAAO,WAAW,YAAY,MAAM;IACxD,MAAM,OAAO,CAAA,GAAA,mLAAA,CAAA,eAAY,AAAD,EAAE;IAC1B,MAAM,YAAY,KAAK,SAAS,IAAI,4JAAA,CAAA,QAAK,CAAC,SAAS;IACnD,MAAM,gBAAgB,KAAK,aAAa,IAAI,4JAAA,CAAA,QAAK,CAAC,aAAa;IAC/D,MAAM,kBAAkB,4JAAA,CAAA,QAAK,CAAC,eAAe,IAAI,KAAK,eAAe;IACrE,MAAM,YAAY;QAAE,GAAG,4JAAA,CAAA,QAAK,CAAC,SAAS;QAAE,GAAG,KAAK,SAAS;IAAC;IAC1D,MAAM,YAAY;QAAE,GAAG,4JAAA,CAAA,QAAK,CAAC,SAAS;QAAE,GAAG,KAAK,SAAS;IAAC;IAC1D,IAAI,iBAAiB,CAAA,GAAA,+KAAA,CAAA,aAAU,AAAD,EAAE,YAAY;QACxC,OAAO,QAAQ,MAAM,CAAC,CAAA,GAAA,sLAAA,CAAA,gBAAa,AAAD;IACtC;IACA,MAAM,cAAc,aAAa;IACjC,CAAA,GAAA,uLAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,WAAW;IACrC,CAAA,GAAA,mLAAA,CAAA,eAAY,AAAD,EAAE;IACb,MAAM,WAAW,IAAI,SAAS;IAC9B,IAAI,CAAA,GAAA,uMAAA,CAAA,yBAAsB,AAAD,EAAE,WAAW,WAAW;QAC7C,OAAO,QAAQ,MAAM,CAAC,CAAA,GAAA,8LAAA,CAAA,oBAAiB,AAAD;IAC1C;IACA,IAAI,MAAM,CAAA,GAAA,uLAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,QAAQ,EAAE,WAAW,kBAAkB;QACrE,OAAO,QAAQ,MAAM,CAAC,CAAA,GAAA,wLAAA,CAAA,iBAAc,AAAD;IACvC;IACA,SAAS,MAAM,CAAC,eAAe;IAC/B,SAAS,MAAM,CAAC,cAAc;IAC9B,SAAS,MAAM,CAAC,eAAe;IAC/B,SAAS,MAAM,CAAC,WAAW;IAC3B,OAAO,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,6BAA6B;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 983, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dennis/blackforge2-main/node_modules/%40emailjs/browser/es/index.js"],"sourcesContent":["import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;;uCAEe;IACX,MAAA,qKAAA,CAAA,OAAI;IACJ,MAAA,qKAAA,CAAA,OAAI;IACJ,UAAA,6KAAA,CAAA,WAAQ;IACR,uBAAA,6KAAA,CAAA,wBAAqB;AACzB","ignoreList":[0],"debugId":null}}]
}