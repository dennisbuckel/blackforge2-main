{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/home.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"backgroundVideo\": \"home-module__Hx0lNG__backgroundVideo\",\n  \"fullScreenHero\": \"home-module__Hx0lNG__fullScreenHero\",\n  \"heroContent\": \"home-module__Hx0lNG__heroContent\",\n  \"pulseDown\": \"home-module__Hx0lNG__pulseDown\",\n  \"scrollDownIndicator\": \"home-module__Hx0lNG__scrollDownIndicator\",\n  \"videoContainer\": \"home-module__Hx0lNG__videoContainer\",\n  \"videoOverlay\": \"home-module__Hx0lNG__videoOverlay\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/denni/Desktop/software/blackforge/blackforge2-main/src/components/PingPongVideo.js"],"sourcesContent":["'use client';\r\n\r\n// src/components/PingPongVideo.js\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport styles from '../app/home.module.css';\r\n\r\nexport default function PingPongVideo() {\r\n  const videoRef = useRef(null);\r\n  const [isReverse, setIsReverse] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  // Erkennung von mobilen Geräten\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      setIsMobile(window.innerWidth < 768);\r\n      \r\n      const handleResize = () => {\r\n        setIsMobile(window.innerWidth < 768);\r\n      };\r\n      \r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }\r\n  }, []);\r\n\r\n  // Video laden und Ereignishandler einrichten\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    if (!video) return;\r\n\r\n    // Video-Lade-Ereignis\r\n    const handleCanPlay = () => {\r\n      setIsLoaded(true);\r\n    };\r\n\r\n    // Wenn das Video bereits im Cache ist\r\n    if (video.readyState >= 3) {\r\n      setIsLoaded(true);\r\n    }\r\n\r\n    // Ereignis für Video-Ende\r\n    const handleEnded = () => {\r\n      if (!isReverse) {\r\n        // Video ist vorwärts abgelaufen und jetzt zu Ende\r\n        setIsReverse(true);\r\n        \r\n        // Video rückwärts abspielen\r\n        video.playbackRate = -1;\r\n        video.currentTime = video.duration;  // Springe zum Ende\r\n      } else {\r\n        // Video ist rückwärts abgelaufen und jetzt am Anfang\r\n        setIsReverse(false);\r\n        \r\n        // Video wieder vorwärts abspielen\r\n        video.playbackRate = 1;\r\n        video.currentTime = 0;  // Springe zum Anfang\r\n      }\r\n      \r\n      // In beiden Fällen Video wieder starten\r\n      video.play().catch(e => console.error(\"Fehler beim Abspielen:\", e));\r\n    };\r\n\r\n    // Ereignishandler registrieren\r\n    video.addEventListener('canplay', handleCanPlay);\r\n    video.addEventListener('ended', handleEnded);\r\n\r\n    // Aufräumen beim Unmounten\r\n    return () => {\r\n      video.removeEventListener('canplay', handleCanPlay);\r\n      video.removeEventListener('ended', handleEnded);\r\n    };\r\n  }, [isReverse]);\r\n\r\n  // Workaround, weil negative playbackRate nicht in allen Browsern funktioniert\r\n  // Alternative Methode mit requestAnimationFrame\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    if (!video || !isReverse) return;\r\n\r\n    // Prüfen, ob negative playbackRate unterstützt wird\r\n    try {\r\n      video.playbackRate = -1;\r\n      \r\n      // Wenn der Browser negative playbackRate nicht unterstützt, \r\n      // wird hier kein Fehler geworfen, aber es funktioniert trotzdem nicht\r\n      if (video.playbackRate !== -1) {\r\n        throw new Error(\"Negative playbackRate nicht unterstützt\");\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Fallback zur manuellen Rückwärts-Wiedergabe\");\r\n      \r\n      // Manuelles Rückwärtsspielen mit requestAnimationFrame\r\n      let lastTime = performance.now();\r\n      let animationId;\r\n      \r\n      const reversePlay = (currentTime) => {\r\n        const elapsed = currentTime - lastTime;\r\n        lastTime = currentTime;\r\n        \r\n        // Berechne den neuen Timestamp (rückwärts)\r\n        video.currentTime = Math.max(0, video.currentTime - elapsed/1000);\r\n        \r\n        if (video.currentTime <= 0) {\r\n          // Am Anfang angekommen\r\n          cancelAnimationFrame(animationId);\r\n          setIsReverse(false);\r\n          video.playbackRate = 1;\r\n          video.currentTime = 0;\r\n          video.play().catch(e => console.error(\"Fehler beim Abspielen:\", e));\r\n        } else {\r\n          animationId = requestAnimationFrame(reversePlay);\r\n        }\r\n      };\r\n      \r\n      // Video pausieren und dann manuell rückwärts abspielen\r\n      video.pause();\r\n      video.currentTime = video.duration;\r\n      animationId = requestAnimationFrame(reversePlay);\r\n      \r\n      // Aufräumen\r\n      return () => {\r\n        if (animationId) {\r\n          cancelAnimationFrame(animationId);\r\n        }\r\n      };\r\n    }\r\n  }, [isReverse]);\r\n\r\n  return (\r\n    <div className={styles.videoContainer}>\r\n      {/* Fallback während des Ladens */}\r\n      {!isLoaded && (\r\n        <div className={styles.fallbackBackground}></div>\r\n      )}\r\n      \r\n      <video \r\n        ref={videoRef}\r\n        className={`${styles.backgroundVideo} ${isLoaded ? styles.fadeIn : ''}`}\r\n        autoPlay\r\n        muted\r\n        playsInline\r\n        preload=\"auto\"\r\n      >\r\n        <source \r\n          src={isMobile ? \"/videos/hero-background-mobile.mp4\" : \"/videos/hero-background.mp4\"} \r\n          type=\"video/mp4\" \r\n        />\r\n      </video>\r\n      \r\n      {/* Overlay für bessere Lesbarkeit */}\r\n      <div className={styles.videoOverlay}></div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/denni/Desktop/software/blackforge/blackforge2-main/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError"],"mappings":"AAAA;;;;;+BAcgBA,gBAAAA;;;eAAAA;;;8BAXkB;AAW3B,SAASA,aAAa,KAAuC;IAAvC,IAAA,EAAEC,MAAM,EAAEC,QAAQ,EAAqB,GAAvC;IAC3B,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAM,OAAA,cAA6B,CAA7B,IAAIC,cAAAA,iBAAiB,CAACH,SAAtB,qBAAA;mBAAA;wBAAA;0BAAA;QAA4B;IACpC;IAEA,OAAOC;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/denni/Desktop/software/blackforge/blackforge2-main/node_modules/next/src/shared/lib/encode-uri-path.ts"],"sourcesContent":["export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n"],"names":["encodeURIPath","file","split","map","p","encodeURIComponent","join"],"mappings":";;;;+BAAgBA,iBAAAA;;;eAAAA;;;AAAT,SAASA,cAAcC,IAAY;IACxC,OAAOA,KACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC,IAAMC,mBAAmBD,IAC9BE,IAAI,CAAC;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/denni/Desktop/software/blackforge/blackforge2-main/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}${dplId}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n"],"names":["PreloadChunks","moduleIds","window","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","dplId","process","env","NEXT_DEPLOYMENT_ID","map","chunk","href","assetPrefix","encodeURIPath","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority"],"mappings":"AAAA;;;;;+BAOgBA,iBAAAA;;;eAAAA;;;;0BALQ;0CAES;+BACH;AAEvB,SAASA,cAAc,KAI7B;IAJ6B,IAAA,EAC5BC,SAAS,EAGV,GAJ6B;IAK5B,+EAA+E;IAC/E,IAAI,OAAOC,WAAW,aAAa;QACjC,OAAO;IACT;IAEA,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAC3C,IAAIF,cAAcG,WAAW;QAC3B,OAAO;IACT;IAEA,MAAMC,WAAW,EAAE;IAEnB,4EAA4E;IAC5E,kDAAkD;IAClD,IAAIJ,UAAUK,qBAAqB,IAAIP,WAAW;QAChD,MAAMQ,WAAWN,UAAUK,qBAAqB;QAChD,KAAK,MAAME,OAAOT,UAAW;YAC3B,IAAI,CAACQ,QAAQ,CAACC,IAAI,EAAE;YACpB,MAAMC,SAASF,QAAQ,CAACC,IAAI,CAACE,KAAK;YAClCL,SAASM,IAAI,IAAIF;QACnB;IACF;IAEA,IAAIJ,SAASO,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,MAAMC,QAAQC,QAAQC,GAAG,CAACC,kBAAkB,GACxC,AAAC,UAAOF,QAAQC,GAAG,CAACC,kBAAkB,IACtC;IAEJ,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAAA,YAAA,QAAA,EAAA;kBACGX,SAASY,GAAG,CAAC,CAACC;YACb,MAAMC,OAAUlB,UAAUmB,WAAW,GAAC,YAASC,CAAAA,GAAAA,eAAAA,aAAa,EAACH,SAASL;YACtE,MAAMS,QAAQJ,MAAMK,QAAQ,CAAC;YAC7B,wEAAwE;YACxE,0IAA0I;YAC1I,gDAAgD;YAChD,IAAID,OAAO;gBACT,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;oBAEC,aAAa;oBACbC,YAAW;oBACXN,MAAMA;oBACNO,KAAI;oBACJC,IAAG;mBALET;YAQX,OAAO;gBACL,kEAAkE;gBAClEU,CAAAA,GAAAA,UAAAA,OAAO,EAACT,MAAM;oBACZQ,IAAI;oBACJE,eAAe;gBACjB;gBACA,OAAO;YACT;QACF;;AAGN","ignoreList":[0],"debugId":null}}]
}